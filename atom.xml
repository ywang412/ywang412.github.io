<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://ywang412.github.io</id>
    <title>Yu&apos;s Github</title>
    <updated>2019-07-01T05:22:09.860Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://ywang412.github.io"/>
    <link rel="self" href="https://ywang412.github.io/atom.xml"/>
    <subtitle>Java by day, Scala by night</subtitle>
    <logo>https://ywang412.github.io/images/avatar.png</logo>
    <icon>https://ywang412.github.io/favicon.ico</icon>
    <rights>All rights reserved 2019, Yu&apos;s Github</rights>
    <entry>
        <title type="html"><![CDATA[Non-trival textbook algorithms]]></title>
        <id>https://ywang412.github.io/post/non-trival-textbook-algorithms</id>
        <link href="https://ywang412.github.io/post/non-trival-textbook-algorithms">
        </link>
        <updated>2019-06-27T01:47:15.000Z</updated>
        <content type="html"><![CDATA[<p><strong>229. Majority Element II  - Moore's Voting Algorithm</strong></p>
<p>The trick in Moore voting algorithm is to aggregate the top n more frequent elements when counting. If the element in iteration is not equal to any of the top n elements, the counts of each top n elements will decrease by one. Moreover, top n elements are different as a result of the initialization order.</p>
<pre><code>int first = nums[0];
int c1 = 1;
int second = Integer.MIN_VALUE;
int c2 = 0;

for (int i = 1; i &lt; nums.length; i++) {
		if (nums[i] == first) c1++;
		else if (nums[i] == second) c2++;
		else if (c1 == 0) {
						first = nums[i];
						c1 = 1;
		}
		else if (c2 == 0) {
						second = nums[i];
						c2 = 1;
				}
		else {
				c1--;
				c2--;
		}
}
</code></pre>
<p><strong>973. K Closest Points to Origin - quick find</strong></p>
<p>To find the kth smallest element, Arrays.sort() will take Nlog(N). Min priority queue can reduce it to Nlog(k). However, if we don't care about the order of the K closest points, quick find can return it in O(N) average time and O(N*N) worst time.</p>
<pre><code>public int[][] kClosest(int[][] points, int K) {
    int len =  points.length, l = 0, r = len - 1;
    while (l &lt;= r) {
        int mid = helper(points, l, r);
        if (mid == K) break;
        if (mid &lt; K) {
            l = mid + 1;
        } else {
            r = mid - 1;
        }
    }
    return Arrays.copyOfRange(points, 0, K);
}

private int helper(int[][] A, int l, int r) {
    int[] pivot = A[l];
    while (l &lt; r) {
        while (l &lt; r &amp;&amp; compare(A[r], pivot) &gt;= 0) r--;
        A[l] = A[r];
        while (l &lt; r &amp;&amp; compare(A[l], pivot) &lt;= 0) l++;
        A[r] = A[l];
    }
    A[l] = pivot;
    return l;
}

private int compare(int[] p1, int[] p2) {
    return p1[0] * p1[0] + p1[1] * p1[1] - p2[0] * p2[0] - p2[1] * p2[1];
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Contributing to Scala zio, a github open source project]]></title>
        <id>https://ywang412.github.io/post/contributing-to-a-scala-zio-a-github-open-source-project</id>
        <link href="https://ywang412.github.io/post/contributing-to-a-scala-zio-a-github-open-source-project">
        </link>
        <updated>2019-06-24T06:54:56.000Z</updated>
        <content type="html"><![CDATA[<p>I've hoped to contribute to open source project on github to be a part of the open source community and become a better developer. Today my two pull requests to a high profile scala repository, zio, got approved and I am very excited. The friendly and encouraging github community brought me a great experience.</p>
<p>These are the two pull requests that I made.
https://github.com/zio/zio/pull/1109
and
https://github.com/zio/zio/pull/1106</p>
<p>The first one is to deprecate a FiberLocal class.
<img src="https://ywang412.github.io/post-images/1561874927019.png" alt="">
The second one is to find a bug as a result of different Windows/Linux file seperator.
<img src="https://ywang412.github.io/post-images/1561874992932.png" alt=""></p>
<p>The zio scala repository is very well maintained with decent test coverage and CD/CI pipeline. Thanks to the project maintainers for their huge efforts.</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Scala] Flatten an arbitrarily-deep nested list ]]></title>
        <id>https://ywang412.github.io/post/scala-flat-a-arbitrarily-deep-nested-list</id>
        <link href="https://ywang412.github.io/post/scala-flat-a-arbitrarily-deep-nested-list">
        </link>
        <updated>2019-06-23T00:37:51.000Z</updated>
        <content type="html"><![CDATA[<p>It is easy to figure out a recursive solution which tries to flat each element in a nested list. The problem is how to aggregate the integers and List[Int] into a new list. Foldleft() with an initial empty list will work but a more elegant solution is to create an one element list if the element is an integer. Below is the comparison.</p>
<p>Foldleft</p>
<pre><code>object FlattenArray {
  def flatten(list : List[Any]) : List[Int] = {
    list.foldLeft(List[Int]()){
      (res, cur) =&gt; {
        cur match {
          case null =&gt; res
          case cur: Int =&gt; res :+ cur
          case cur: List[Any] =&gt; res ::: flatten(cur)
        }
      }
    }
  }
}
</code></pre>
<p>Create single element list</p>
<pre><code>object FlattenArray {
  def flatten(input: List[_]): List[_] =
    input
      .filterNot(_ == null)
      .flatMap {
        case list: List[_] =&gt; flatten(list)
        case elem =&gt; List(elem)
      }
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Examples of OOD class diagrams]]></title>
        <id>https://ywang412.github.io/post/examples-of-ood-class-diagrams</id>
        <link href="https://ywang412.github.io/post/examples-of-ood-class-diagrams">
        </link>
        <updated>2019-05-14T22:38:58.000Z</updated>
        <content type="html"><![CDATA[<p>Shopping
<img src="https://ywang412.github.io/post-images/1561869983328.png" alt="">
Parking
<img src="https://ywang412.github.io/post-images/1561693897171.png" alt="">
Library
<img src="https://ywang412.github.io/post-images/1561693905367.png" alt=""></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Coding tricks using Java syntax ]]></title>
        <id>https://ywang412.github.io/post/leetcode-118-pascals-triangle-java-type-erasure</id>
        <link href="https://ywang412.github.io/post/leetcode-118-pascals-triangle-java-type-erasure">
        </link>
        <updated>2019-04-15T23:49:32.000Z</updated>
        <content type="html"><![CDATA[<p>LeetCode has greatly sharpened my programming skills. A few examples are listed here.</p>
<p><strong>LeetCode 118</strong> Pascal's Triangle<br>
Due to Java type erasure, in order to instantiate a list of list, one can use
<code>List&lt;List&lt;Integer&gt;&gt; res = new ArrayList&lt;&gt;();</code>
or
<code>List&lt;List&lt;Integer&gt;&gt; res = new ArrayList&lt;List&lt;Integer&gt;&gt;();</code>
Here <code>List&lt;Integer&gt;</code> becomes type definition.</p>
<p><strong>LeetCode 929</strong> requires removing of &quot;.&quot; in a string. It turns out &quot;.&quot; and &quot;*&quot; are metaCharacters used in a regex. From JDK 7 manual, the replaceAll() takes regex input and therefore &quot;.&quot; was recognized  as &quot;any character&quot;. Two backward slashes will escape dot character. Yet it is OK to use replace() API which can treat the &quot;.&quot; as a dot character.</p>
<p><em>JDK7</em></p>
<pre><code>String	replace(char oldChar, char newChar)
Returns a new string resulting from replacing all occurrences of oldChar in this string with newChar.
String	replaceAll(String regex, String replacement)
Replaces each substring of this string that matches the given regular expression with the given replacement.
String	replaceFirst(String regex, String replacement)
Replaces the first substring of this string that matches the given regular expression with the given replacement.
</code></pre>
<p>The solution is below,</p>
<pre><code>class Solution {
    public static int numUniqueEmails(String[] emails) {
        if (emails.length &lt; 1) return 0;

        Set&lt;String&gt; set = new HashSet&lt;&gt;();
        for (String email : emails) {
            String[] adds = email.split(&quot;@&quot;);
            String name = adds[0]; 
            if (name.indexOf(&quot;+&quot;) &gt;= 0) name = name.substring(0, name.indexOf(&quot;+&quot;));
            name = name.replaceAll(&quot;\\.&quot;,&quot;&quot;);
            set.add(name + &quot;@&quot; + adds[1]);
        }
        return set.size();
    }

    public static void main(String[] args) {
        String[] t = new String[]{&quot;testemail@leetcode.com&quot;,&quot;testemail1@leetcode.com&quot;,&quot;testemail+david@lee.tcode.com&quot;};
        System.out.println(numUniqueEmails(t));
    }
}
</code></pre>
<p><strong>LeetCode 791. Custom Sort String</strong>
Below is the code snippet to create a priorityqueue with custom comparator.</p>
<pre><code>			PriorityQueue&lt;Character&gt; queue = new PriorityQueue&lt;&gt;(new Comparator&lt;Character&gt;(){
					public int compare(Character a, Character b) {
							return Integer.compare(map.getOrDefault(a, Integer.MAX_VALUE), map.getOrDefault(b, Integer.MAX_VALUE));
					}
			});
</code></pre>
<p><strong>LeetCode 957. Prison Cells After N Days</strong></p>
<p>The state change cycle might start at a state that is not the initital state, therefore a map is used to record past state at each day. When fastforward the N using N % cycle, the N could already be 0 and the last state change should be skipped.</p>
<pre><code>while (N &gt; 0) { 
		StringBuilder sb = new StringBuilder();
		for (int j : cells) sb.append(j);
		if (map.containsKey(sb.toString())) {
				N %= (N - map.get(sb.toString()));
		}
		map.put(sb.toString(), N);
		if (N &gt;= 1) {
				N--;
				cells = prisonAfter1Day(cells);
		}
}
</code></pre>
<p><strong>LeetCode 957. K Empty Slots</strong></p>
<p>Java Primitive types such as &quot;int&quot; are not nullable. Boxed version such as &quot;Integer&quot; are nullable. Therefore, when get nullable value from Java collections, the null check can only performed on the boxed data type.</p>
<pre><code>TreeSet&lt;Integer&gt; set = new TreeSet&lt;&gt;();
Integer low = set.floor(bulbs[i]);
Integer high = set.ceiling(bulbs[i]);
if (low != null &amp;&amp; bulbs[i] - low - 1 == K) return i + 1;
if (high != null &amp;&amp; high - bulbs[i] - 1 == K) return i + 1;            
</code></pre>
<p><strong>402. Remove K Digits</strong>
To remove the leading zeros in a string, regex match by &quot;^0*&quot; is the shortcut. A more verbose way is to break the for-loop at the first non-zero Char.</p>
<pre><code>for (int i = 0; i &lt; source.length(); ++i) {
		char c = source.charAt(i);
		if (c != '0') {
				return source.substring(i);
		}
}
return &quot;&quot;; // or return &quot;0&quot;;
</code></pre>
<pre><code>while(sb.length()&gt;1 &amp;&amp; sb.charAt(0)=='0')
		sb.deleteCharAt(0);
return sb.toString();
</code></pre>
<pre><code>String s = &quot;00000000&quot;;
s = s.replaceFirst (&quot;^0*&quot;, &quot;&quot;);
if (s.isEmpty()) s = &quot;0&quot;;
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pitfalls in DFS and BFS algorithm]]></title>
        <id>https://ywang412.github.io/post/dfsbfs-algorithm</id>
        <link href="https://ywang412.github.io/post/dfsbfs-algorithm">
        </link>
        <updated>2019-03-12T09:03:19.000Z</updated>
        <content type="html"><![CDATA[<p>Some pitfalls in DFS/BFS algorithm that requires extra caution.</p>
<p><strong>Leetcode 542. 01 Matrix</strong></p>
<p>To find the shortest distance from 1 to nearest 0, It is important to truncate when current dist from a 0 is already larger than previous found dfs path originated from another 0.</p>
<pre><code>public void dfs(int[][] res, boolean[][] visited, int i, int j, int dist) {
        if (i &lt; 0 || i &gt;= res.length || j &lt; 0 || j &gt;= res[0].length || res[i][j] &lt;= dist) return;
        res[i][j] = Math.min(dist, res[i][j]);
        visited[i][j] = true;
        dfs(res, visited, i - 1, j, dist + 1);
        dfs(res, visited, i + 1, j, dist + 1);
        dfs(res, visited, i, j - 1, dist + 1);
        dfs(res, visited, i, j + 1, dist + 1); 
        visited[i][j] = false;
    }
</code></pre>
<p><strong>LeetCode 39. Combination Sum</strong>
Because of passing by reference, when adding a path to result list, the added path is a deep copy to avoid further changes. To prevent duplicated path, each dfs entry will set the minimum index of the range that following dfs can choose from.</p>
<pre><code>public void dfs(int[] candidates, int start, int cur, int target, List&lt;Integer&gt; path, List&lt;List&lt;Integer&gt;&gt; res) {
     if (cur &gt; target) return;
     if (cur == target) { 
         List&lt;Integer&gt; pathToAdd = new LinkedList&lt;&gt;(path);
         res.add(pathToAdd);
         return;
     }
     for (int i = start; i &lt; candidates.length; i++) {
         path.add(candidates[i]);
         dfs(candidates, i, cur + candidates[i], target, path, res);
         path.remove(path.size() - 1);
     }
</code></pre>
<p><strong>LeetCode 675. Cut Off Trees for Golf Event</strong>
Whenever a new position is added to the BFS queue, the visited matrix or set need to mark that as soon as possible to avoid revisiting it. Comparing string (Char of 2 bytes) is much more time consuming than comparing Integer (4 bytes).</p>
<pre><code>public int bfs(int[] pre, int[] cur, List&lt;List&lt;Integer&gt;&gt; forest) {  
		Queue&lt;int[]&gt; q = new LinkedList&lt;&gt;();
		Set&lt;String&gt; visited = new HashSet&lt;&gt;();
		pre[2] = 0;
		q.offer(pre); 
		visited.add(pre[0] + &quot;#&quot; + pre[1]);
		while (!q.isEmpty()) {   
				int[] temp = q.poll(); 
				// if ((temp[0] + &quot;#&quot; + temp[1]).equals(cur[0] + &quot;#&quot; + cur[1])) { this will cause timeout
				if ((temp[0] == cur[0]) &amp;&amp; (temp[1] == cur[1])) {
						return temp[2];
				}
				else {
						for (int[] dir : dirs) {
								int i = temp[0] + dir[0];
								int j = temp[1] + dir[1];
								if (i &gt;= 0 &amp;&amp; i &lt; forest.size() &amp;&amp; j &gt;= 0 &amp;&amp; j &lt; forest.get(i).size() &amp;&amp; forest.get(i).get(j) &gt; 0 &amp;&amp; !visited.contains(i + &quot;#&quot; + j)) {
										q.offer(new int[]{i, j, temp[2] + 1});
										visited.add(i + &quot;#&quot; + j);
								}
						}
				} 
		}
		return -1;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Publishing a personal programming blog on Github.io using Gridea]]></title>
        <id>https://ywang412.github.io/post/publishing-personal-website-on-githubio-using-gridea</id>
        <link href="https://ywang412.github.io/post/publishing-personal-website-on-githubio-using-gridea">
        </link>
        <updated>2019-02-01T11:44:23.000Z</updated>
        <content type="html"><![CDATA[<p>I've always wanted to start a programmer's blog because I learned a huge amount from others' tech blog. But hosting and maintaining a blog website could require lots of effort. I came across this Gridea tool (https://github.com/getgridea/gridea) which features html/css static content generation and github.io auto publishing. It helps immensely writing a programming blog.</p>
<p>After downloading and installing the Gridea tool, the first thing is to link it in order to publish on github.io. The settings tab is quite self-explanatory. <img src="https://ywang412.github.io/post-images/1561227293749.png" alt=""></p>
<p>The publishing will require a github token for authentication which can be generated here https://github.com/settings/tokens . Remember to use <strong>repo scope</strong> access token to reduce vulnerability.
<img src="https://ywang412.github.io/post-images/1561227595716.png" alt=""></p>
<p>The best thing about Gridea is auto-generation of markdown tags and corresponding hotkeys. <img src="https://ywang412.github.io/post-images/1561227880490.png" alt=""></p>
<pre><code>object SumOfMultiples {
  def sum(factors: Set[Int], limit: Int): Int = {
    factors.map(x =&gt; Stream.range(1, limit / x + 1).map(_ * x).takeWhile(_ &lt; limit).toList).flatMap(x =&gt; x).sum
  }
}
</code></pre>
<p>The last thing I want to mention is the comment function. Currently, only Gitalk and Disqus third-party API are allowed. I choose Disqus for its simpler setting. <img src="https://ywang412.github.io/post-images/1561228499134.png" alt="">
Register a free account on disqus and create a new application. The public api key will appear in the application confirmation page. The short name can be located on the admin page. <img src="https://ywang412.github.io/post-images/1561229354797.png" alt=""></p>
<p>I enjoyed very much the writing and seeing the outcome on github.io. Now I have a personal blog that motivates me to write once a while to share knowledge and help others. Kudos!</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Resume]]></title>
        <id>https://ywang412.github.io/post/resume</id>
        <link href="https://ywang412.github.io/post/resume">
        </link>
        <updated>2018-12-20T01:50:42.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p><a href="https://ywang412.github.io/post/resume/">Resume</a> |
<a href="https://www.linkedin.com/in/ywang412/">LinkedIn</a>  |
<a href="https://ywang412.github.io/">Blog</a></p>
</blockquote>
<h1 id="yu-wang-application-developer">Yu Wang – Application Developer</h1>
<ul>
<li>6+ years of experience as a software engineer in various industries</li>
<li>Full stack skill-set with a concentration on back-end engineering</li>
<li>Contributed actively to open source projects on GitHub</li>
</ul>
<h2 id="education">Education</h2>
<p><strong>Georgia Institute of Technology, Atlanta, GA</strong><br>
M.S. in Computer Sciences<br>
<em>Dec 2017</em></p>
<h2 id="skills">Skills</h2>
<ul>
<li>Architectural Pattern – Model View Controller, Server Side Rendering, Finite State Machine</li>
<li>Methodology – Agile, Scrum, Cross-platform Development, Object-Oriented Programming, Composition, Rapid Application Development</li>
<li>Programming Language – JavaScript, TypeScript, CSS, LESS, SASS, HTML, PHP, C#</li>
<li>UI – Mobile-first Design, Responsive Web Design</li>
<li>UX – Information Architecture, Persona Classification</li>
</ul>
<h2 id="tools">Tools</h2>
<ul>
<li>Framework – Angular, React, Redux, Node.js, Express, Handlebars, Styled Components, Bootstrap, Axios, Bluebird, jQuery, AJAX</li>
<li>Automation Software – Webpack, Gulp, Jenkins</li>
<li>Content Management System – SilverStripe, WordPress</li>
<li>Graphic Editor – Adobe Illustrator, Adobe Photoshop, Sketch</li>
<li>Prototyping – Balsamiq, InVision</li>
<li>Email Distribution System – HubSpot</li>
</ul>
<h2 id="experience">Experience</h2>
<p><strong>Koto, Tyson's Corner, VA</strong><br>
Software Engineer<br>
<em>April 2018 – Present</em></p>
<p><strong>ScoreWin LLC</strong><br>
Owner<br>
<em>October 2016 – Present</em></p>
<ul>
<li>Led a small team of innovative engineers</li>
<li>Engaged with business stakeholders for contract acquisition and agile ceremonies</li>
<li>Created an Art Portal for Holiday Retirement (Angular, Node.js, SASS)</li>
<li>Created a custom WordPress Theme for PackHealth (PHP, SASS, WordPress)</li>
<li>Engineered a custom SASS framework (SASS)</li>
<li>Performed numerous site migrations (MySQL, Node.js, SilverStripe, WordPress)</li>
<li>Developed reusable components and modules (AngularJS, Angular, PHP, SASS)</li>
<li>Created wireframes (Balsamiq, InVision)</li>
<li>Designed mockups (Adobe Photoshop, Adobe Illustrator, Sketch)</li>
</ul>
<p><strong>Under Armour, Baltimore, MD</strong><br>
Software Engineer – Contractor<br>
<em>June 2017 – March 2018</em></p>
<ul>
<li>Developed site manager portal which housed tooling used by customer service representatives (Node.js, Styled Components, React, Redux)</li>
<li>Migrated existing LESS styling to use Styled Components (React, Styled Components, LESS)</li>
<li>Developed API and Service endpoints (Node.js, Sequelize, Protobuf, Swagger)</li>
<li>Integrated Auth0 flow into the site manager portal (React, Redux)</li>
<li>Created wireframes (Balsamiq, InVision)</li>
</ul>
<p><strong>RainKing Solutions, Bethesda, MD</strong><br>
Senior Front-End Engineer – Contractor<br>
<em>February 2017 – June 2017</em></p>
<ul>
<li>Developed pages and components to support a new major release (v4.0) for the RainKing platform (AngularJS, GSP, SASS)</li>
<li>Integrated Gulp and NPM with the existing Jenkins build pipeline (Gulp, NPM, Jenkins)</li>
<li>Created wireframes (Balsamiq, InVision)</li>
<li>Collaborated with a third-party consulting agency to communicate design requests and revisions (InVision)</li>
</ul>
<p><strong>Becton Dickinson, Reston VA</strong><br>
Senior UI Developer – Contractor<br>
<em>July 2016 – February 2017</em></p>
<ul>
<li>Lead UI Developer on a distributed team including 6 offshore resources</li>
<li>Performed code reviews and provided technical analysis</li>
<li>Developed a medical hybrid application (AngularJS, TypeScript, Xamarin)</li>
<li>Integrated a medical hybrid application with bluetooth pairing, bluetooth printers, and barcode scanners</li>
</ul>
<p><strong>Acuity Systems LLC, Herndon, VA</strong><br>
UI Developer – Contractor<br>
<em>April 2016 – July 2016</em></p>
<ul>
<li>Created wireframes (Balsamiq, InVision)</li>
<li>Designed mockups (Adobe Photoshop, Adobe Illustrator)</li>
<li>Developed API service container in Node.js connecting custom Web Portal to MicroStrategy Intelligence Server (Node.js)</li>
<li>Integrated Web Portal with GSA common components</li>
</ul>
<p><strong>Folio Investing, McLean, VA</strong><br>
UI Developer<br>
<em>April 2015 – April 2016</em></p>
<ul>
<li>Developed private placements platform application (AngularJS, SASS, JavaScript, JSP, JSTL)</li>
<li>Developed an SVG signature pad for JSP templates and ported it as an Angular directive (AngularJS, SASS, JavaScript, JSP, JSTL)</li>
<li>Redesigned and implemented a new account opening path (SASS, JavaScript, JSP, JSTL)</li>
<li>Designed wireframes mockups (Adobe Illustrator, Adobe Photoshop)</li>
<li>Created numerous utility plugins (AngularJS, JavaScript, jQuery)</li>
</ul>
<p><strong>Millennial Media, Baltimore, MD</strong><br>
Web Developer<br>
<em>February 2014 – April 2015</em></p>
<ul>
<li>Extended the capabilities of the existing CMS powering millennialmedia.com by creating modules and templates (CSS, JavaScript, MySQL)</li>
<li>Integrated Smartling as a multilingual translation solution for millennialmedia.com (CSS, JavaScript, PHP)</li>
<li>Developed IOS and Android mobile applications (AngularJS, JavaScript, SASS)</li>
<li>Developed event portal that enables users to create RSVP and information landing pages (AngularJS, JavaScript, MySQL, SASS, SilverStripe)</li>
<li>Developed movewithmobile.com as part of an ongoing marketing campaign (AngularJS, JavaScript, MySQL, SASS, SilverStripe)</li>
</ul>
<p><strong>BLDG-25, Durham, NC</strong><br>
Web Developer<br>
<em>August 2013 – February 2014</em></p>
<ul>
<li>Developed a virtual simulation for a German real estate company (C#, JavaScript, Unity 3D)</li>
<li>Created UI visualizations for a consumed web service (AJAX, CSS, JavaScript)</li>
<li>Developed an e-learning web application for Blue Cross Blue Shield of Louisiana (CSS, PHP, JavaScript, MySQL, SilverStripe)</li>
</ul>
<p><strong>System Technologies Advanced Research, VA Beach, VA</strong><br>
Software Engineer<br>
<em>November 2012 – July 2013</em></p>
<ul>
<li>Developed a virtual simulation running in a touch-enabled kiosk of the US Battleship Wisconsin for the Nauticus museum in Norfolk, VA (C#, JavaScript, Unity 3D)</li>
<li>Developed IOS and Android mobile applications (Action Script 3, Adobe Air, Adobe Flex, Starling)</li>
<li>Developed sound software for the Raspberry Pi which interfaced with IO hardware modules (C#, C++)</li>
</ul>
]]></content>
    </entry>
</feed>